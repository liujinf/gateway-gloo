syntax = "proto3";
package kube.gateway.gloo.solo.io;
option go_package = "github.com/solo-io/gloo/projects/gateway2/pkg/api/gateway.gloo.solo.io/v1alpha1/kube";

import "extproto/ext.proto";
option (extproto.equal_all) = true;
option (extproto.hash_all) = true;

import "google/protobuf/wrappers.proto";

// Kubernetes autoscaling configuration.
message Autoscaling {
  // If set, a Kubernetes HorizontalPodAutoscaler will be created to scale the
  // workload to match demand. See
  // https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
  // for details.
  HorizontalPodAutoscaler horizontal_pod_autoscaler = 1;
}

// Horizontal pod autoscaling configuration. See
// https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
// for details.
message HorizontalPodAutoscaler {
  // The lower limit for the number of replicas to which the autoscaler can
  // scale down. Defaults to 1.
  google.protobuf.UInt32Value min_replicas = 1;
  // The upper limit for the number of replicas to which the autoscaler can
  // scale up. Cannot be less than `minReplicas`. Defaults to 100.
  google.protobuf.UInt32Value max_replicas = 2;
  // The target value of the average CPU utilization across all relevant pods,
  // represented as a percentage of the requested value of the resource for the
  // pods. Defaults to 80.
  google.protobuf.UInt32Value target_cpu_utilization_percentage = 3;
  // The target value of the average memory utilization across all relevant
  // pods, represented as a percentage of the requested value of the resource
  // for the pods. Defaults to 80.
  google.protobuf.UInt32Value target_memory_utilization_percentage = 4;
}