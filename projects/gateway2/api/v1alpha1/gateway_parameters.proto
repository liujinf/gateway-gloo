syntax = "proto3";
package gateway.gloo.solo.io;
option go_package = "github.com/solo-io/gloo/projects/gateway2/pkg/api/gateway.gloo.solo.io/v1alpha1";

import "extproto/ext.proto";
option (extproto.equal_all) = true;
option (extproto.hash_all) = true;

import "github.com/solo-io/gloo/projects/gateway2/api/v1alpha1/kube/autoscaling.proto";
import "github.com/solo-io/gloo/projects/gateway2/api/v1alpha1/kube/container.proto";
import "github.com/solo-io/gloo/projects/gateway2/api/v1alpha1/kube/pod.proto";
import "github.com/solo-io/gloo/projects/gateway2/api/v1alpha1/kube/service.proto";

import "github.com/solo-io/gloo/projects/gateway2/api/external/kubernetes/api/core/v1/generated.proto";
import "github.com/solo-io/gloo/projects/gateway2/api/external/kubernetes/apimachinery/pkg/apis/meta/v1/generated.proto";

import "google/protobuf/wrappers.proto";

// A GatewayParameters contains configuration that is used to dynamically
// provision Gloo Gateway's data plane (Envoy proxy instance), based on a
// Kubernetes Gateway.
message GatewayParametersSpec {
  // The type of environment/platform in which the proxy will be provisioned.
  oneof environment_type {
    // The proxy will be deployed on Kubernetes.
    KubernetesProxyConfig kube = 1;
  }
}

// Configuration for the set of Kubernetes resources that will be provisioned
// for a given Gateway.
message KubernetesProxyConfig {
  // The workload type of the proxy
  oneof workload_type {
    // Use a Kubernetes deployment as the proxy workload type.
    ProxyDeployment deployment = 1;
  }

  // Configuration for the container running Envoy.
  EnvoyContainer envoy_container = 2;

  // Configuration for the pods that will be created.
  kube.gateway.gloo.solo.io.Pod pod_template = 3;

  // Configuration for the Kubernetes Service that exposes the Envoy proxy over
  // the network.
  kube.gateway.gloo.solo.io.Service service = 4;

  // Autoscaling configuration.
  kube.gateway.gloo.solo.io.Autoscaling autoscaling = 5;
}

// Configuration for the Proxy deployment in Kubernetes.
message ProxyDeployment {
  // The number of desired pods. Defaults to 1.
  google.protobuf.UInt32Value replicas = 1;
}

// Configuration for the container running Envoy.
message EnvoyContainer {
  // Initial envoy configuration.
  EnvoyBootstrap bootstrap = 1;

  // The envoy container image. See
  // https://kubernetes.io/docs/concepts/containers/images
  // for details.
  //
  // Default values, which may be overridden individually:
  //   registry: quay.io/solo-io
  //   repository: gloo-envoy-wrapper (OSS) / gloo-ee-envoy-wrapper (EE)
  //   tag: <gloo version> (OSS) / <gloo-ee version> (EE)
  //   pullPolicy: IfNotPresent
  kube.gateway.gloo.solo.io.Image image = 2;

  // The security context for this container. See
  // https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#securitycontext-v1-core
  // for details.
  k8s.io.api.core.v1.SecurityContext security_context = 3;

  // The compute resources required by this container. See
  // https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
  // for details.
  kube.gateway.gloo.solo.io.ResourceRequirements resources = 4;
}

// Configuration for the Envoy proxy instance that is provisioned from a
// Kubernetes Gateway.
message EnvoyBootstrap {
  // Envoy log level. Options include "trace", "debug", "info", "warn", "error",
  // "critical" and "off". Defaults to "info". See
  // https://www.envoyproxy.io/docs/envoy/latest/start/quick-start/run-envoy#debugging-envoy
  // for more information.
  string log_level = 1;

  // Envoy log levels for specific components. The keys are component names and
  // the values are one of "trace", "debug", "info", "warn", "error",
  // "critical", or "off", e.g.
  //    ```yaml
  //    componentLogLevels:
  //      upstream: debug
  //      connection: trace
  //    ```
  // These will be converted to the `--component-log-level` Envoy argument
  // value. See
  // https://www.envoyproxy.io/docs/envoy/latest/start/quick-start/run-envoy#debugging-envoy
  // for more information.
  //
  // Note: the keys and values cannot be empty, but they are not otherwise validated.
  map<string, string> component_log_levels = 2;
}

message GatewayParametersStatus {
  // The current conditions of the GatewayParameters. This is not currently
  // implemented.
  // repeated k8s.io.apimachinery.pkg.apis.meta.v1.Condition conditions = 1;
}
