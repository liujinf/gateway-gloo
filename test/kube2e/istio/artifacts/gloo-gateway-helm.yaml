global:
  # Set up gloo with istio integration enabled (through `enableIstioSidecarOnGateway`)
  istioSDS:
    enabled: true
  glooMtls:
    istioProxy:
      image:
        repository: proxyv2
        registry: docker.io/istio
        tag: 1.18.2 # This tag has to match the version of Istio being used in the test
gloo:
  logLevel: info
  disableLeaderElection: true
  deployment:
    #  We have limited GitHub action resources which can cause containers to not create
    # therefore we lessen the cpu resource requests values from the default (500m) to 100m.
    resources:
      requests:
        cpu: 100m
        memory: 256Mi

# Disable gloo gateway and only rely on gateway created by Gateway resource
gatewayProxies:
  gatewayProxy:
    disabled: true

# Disable discovery, Gloo gateway doesn't need this
discovery:
  enabled: false

# These values are recommended production values and are not expected to impact tested behavior for the Istio suite
settings:
  # Note: disableKubernetesDestinations needs to be set for k8s gateway to select kube services
  disableKubernetesDestinations: false
  invalidConfigPolicy:
    replaceInvalidRoutes: true
    invalidRouteResponseCode: 404
    invalidRouteResponseBody: Gloo Gateway has invalid configuration.
gateway:
  persistProxySpec: true
  logLevel: info
  validation:
    allowWarnings: true
    alwaysAcceptResources: false
kubeGateway:
  enabled: true # Create the gateway resource as part of the test